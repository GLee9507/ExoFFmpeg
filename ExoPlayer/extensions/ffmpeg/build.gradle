// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
apply from: '../../constants.gradle'
apply plugin: 'com.android.library'

android {
    compileSdkVersion project.ext.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        consumerProguardFiles 'proguard-rules.txt'

        ndk {
//            abiFilters "armeabi-v7a"
            abiFilters "x86"
            // 指定要ndk需要兼容的架构(这样其他依赖包里mips,x86,armeabi,arm-v8之类的so会被过滤掉)
        }
        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_static',
                        '-DANDROID_ARM_NEON=TRUE',
                        '-DANDROID_NATIVE_API_LEVEL=19'
            }
        }
    }

    sourceSets.main {
        jniLibs.srcDir 'src/main/jni/android-libs'
        jni.srcDirs = ['src/main/jni'] // Disable the automatic ndk-build call by Android Studio.
    }
    externalNativeBuild {
//        ndkBuild {
//            path "src/main/jni/Android.mk"
//        }
        cmake {
            path "src/main/jni/CMakeLists.txt"
//                    '-DANDROID_TOOLCHAIN=clang'
            // explicitly build libs
//            targets 'gmath', 'gperf'
        }
    }
}

dependencies {
//    implementation project(modulePrefix + 'library-core')
    implementation project(path: ':exo-core')
    implementation 'com.android.support:support-annotations:' + supportLibraryVersion
    compileOnly 'org.checkerframework:checker-qual:' + checkerframeworkVersion
}

//ext {
//    javadocTitle = 'FFmpeg extension'
//}
//apply from: '../../javadoc_library.gradle'
